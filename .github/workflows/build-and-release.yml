name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggering

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact-name: funding_history-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact-name: funding_history-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact-name: funding_history-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact-name: funding_history-macos-aarch64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo registry and index
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact (Unix)
        if: runner.os != 'Windows'
        run: |
          mkdir -p artifacts
          cp target/${{ matrix.target }}/release/funding_history artifacts/${{ matrix.artifact-name }}
          chmod +x artifacts/${{ matrix.artifact-name }}

      - name: Prepare artifact (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir artifacts
          cp target/${{ matrix.target }}/release/funding_history.exe artifacts/${{ matrix.artifact-name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: artifacts/${{ matrix.artifact-name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/funding_history-linux-x86_64/funding_history-linux-x86_64
            artifacts/funding_history-windows-x86_64.exe/funding_history-windows-x86_64.exe
            artifacts/funding_history-macos-x86_64/funding_history-macos-x86_64
            artifacts/funding_history-macos-aarch64/funding_history-macos-aarch64
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}